<form class="needs-validation" id="config-form" method="post" action="/config-site/{{ id }}">

    <div class="row">
        
        <div class="col-md-12 order-md-2 mb-4">
            <h4 class="mb-3">Config Form</h4>

            <div class="text-right">
                <i class="fa fa-plus-square" onclick="addRow('dataTable')"  title="Click to Add More"></i>
                 <i class="fa fa-trash" onclick="deleteRow('dataTable')"  title="Click to Delete "></i>
            </div>
            <div class="text-right">
               
            </div>
            <hr class="mb-3">

            <table id="dataTable" width="100%" border="0">
                <tbody class="table-body">
                    <tr class="table-row">
                    <td width="200">
                        <select onchange="grab(this)" name="populated_List[]" class="form-control popList" required id="popList">
                            <option value="">Select Type</option>
                            <option value="button">button</option>
                            <option value="text">text</option>
                            <option value="image">image</option>
                            <option value="video">video</option>
                            <option value="feedback">feedback</option>
                            <option value="grid">grid</option>
                            <option value="order">order</option>
                        </select>
                    </td>
                    <td width="250"><input type="text" name="Reqq[]" class="form-control" placeholder="Req"/></td>
                    <td width="250"><textarea type="text" name="Response[]" class="form-control response" placeholder="Response" id="output" /></textarea></td>
                    
                </tr>
                </tbody>
                
            </table>         
            
        </div>

    </div>

    <div class="col-sm-2">
        <button class="btn btn-primary btn-md btn-block" type="submit">Submit</button>
    </div>
</form>

<br/>
<hr class="mb-4">

<div class="col-md-12">

        <div class="output"> </div>

        <br/>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="">Records </h4>
        </div>
        <div class="panel-body">  
            <div class="loading"></div>

            <div id="grid"></div>
        </div>
    </div>
</div>

<script
  src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
  crossorigin="anonymous"></script>

<script>
$(document).ready(function(){
    
})
    

    function grab(event){
        let x=$(event).val()
        let resp = $(event).closest('tr').find('.response');
       // alert($(resp).val());
        if(x != ""){
            let fd= new FormData();
            fd.append('uid', x)
            let url = window.location.origin + "/fetch-response/" + x
            fetch(url ,{
                method : 'GET',
                headers : {
                    'Accept':'application/json',
                    'Content-Type':'application/json'
                },
            }).then(res=> res.json()).then(res=>{
                if(res.statusCode == 200){
                    let data = JSON.parse(JSON.stringify(res.message));
                    resp.val(data);
                    console.log(data)
                }
            }).catch(err=>{
                console.log(err)
            })
        }
    }

    function addRow (tblID) {
        
        var table = document.getElementById(tblID);

        var rowCount = table.rows.length;
        var row = table.insertRow(rowCount);

        var colCount = table.rows[0].cells.length;

        for(var i=0; i<colCount; i++) {

            var newcell	= row.insertCell(i);

            newcell.innerHTML = table.rows[0].cells[i].innerHTML;
            //alert(newcell.childNodes);
            switch(newcell.childNodes[0].type) {
                case "text":
                        newcell.childNodes[0].value = "";
                        break;
                case "checkbox":
                        newcell.childNodes[0].checked = false;
                        break;
                case "select-one":
                        newcell.childNodes[0].selectedIndex = 0;
                        break;
            }
        }

    }

    function deleteRow (tblID) {
        
        var table = document.getElementById(tblID);

        var rowCount = table.rows.length;
        if(rowCount > 1){
            //table.getElementsByTagName('tr')[rowCount-1].romove();
            lastRow=rowCount-1;
            $('#'+tblID).find('tr:last').remove();
        }
    }

    const loadingImage = () => {
        let elem = document.createElement("img")
        elem.setAttribute("src", window.location.origin + "/assets/images/loading.gif")
        elem.setAttribute("width", 55);
        document.querySelector(".loading").appendChild(elem)
    }

    loadingImage()

    let y = $('.outRes').html()
    
    if(y != ""){

        let url = window.location.origin + "/user-config"
        fetch(url ,{
            method : 'GET',
            headers : {
                'Accept':'application/json',
                'Content-Type':'application/json'
            },
        }).then(res=> res.json()).then(res=>{

            $('.loading').empty()

           var gridData = res.message

            $(document).ready(function () {
                $("#grid").shieldGrid({
                    dataSource: {
                        data: gridData,
                        schema: {
                            fields: {
                                id: { path: "_id", type: String },
                                req: { path: "req", type: String },
                                response: { path: "response", type: String }
                            }
                        }
                    },
                    sorting: {
                        multiple: true
                    },
                    events: {
                        command: function(e) {
                            if(e.commandName == 'save'){
                                let data = e.target.dataSource.tracker.changes.edited[0].data
                                let x = {
                                    id: data.id,
                                    req_q: data.req,
                                    response: data.response
                                }
                                if(data.id){
                                    let url = window.location.origin + "/update-config"
                                    fetch(url ,{
                                        method : 'POST',
                                        headers : {
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body : JSON.stringify(x)
                                    }).then(res=> res.json()).then(res=>{
                                        if(res.statusCode == 200){
                                            $('.output').html(`<div class="alert alert-success alert-dismissible fade show" role="alert">
                                            ${res.message}
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                            </div>`)
                                        }else{
                                            $('.output').html(`<div class="alert alert-danger alert-dismissible fade show" role="alert">
                                            ${res.message}
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                            </div>`)
                                        }
                                    }).catch(err=>{
                                         $('.output').html(`<div class="alert alert-danger alert-dismissible fade show" role="alert">
                                            ${err}
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                            </div>`)
                                    })
                                }
                            }
                            
                            //console.log(row) 
                        }    
                    },
                    rowHover: false,
                    columns: [
                        { field: "req", title: "Req", width: "200px" },
                        { field: "response", title: "Response" },              
                        {
                            width: 70,
                            title: "Action",
                            buttons: [
                                { commandName: "edit", caption: "Edit" },
                                { commandName: "delete", caption: "Delete" }
                            ]
                        }
                    ],
                    editing: {
                        enabled: true,
                        mode: "popup",
                        confirmation: {
                            "delete": {
                                enabled: true,
                                template: function (item) {

                                    var x = confirm("This record will be deleted. Are you sure you want to delete?");

                                    if (x){
                                        let url = window.location.origin + "/delete-config/" + item.id
                                        fetch(url ,{
                                            method : 'GET',
                                            headers : {
                                                'Accept':'application/json',
                                                'Content-Type':'application/json'
                                            }
                                        }).then(res=> res.json()).then(res=>{
                                            if(res.statusCode == 200){
                                                $('.output').html(`<div class="alert alert-success alert-dismissible fade show" role="alert">
                                                ${res.message}
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                                </div>`)
                                            }else{
                                                $('.output').html(`<div class="alert alert-danger alert-dismissible fade show" role="alert">
                                                ${res.message}
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                                </div>`)
                                            }
                                        }).catch(err=>{
                                            $('.output').html(`<div class="alert alert-danger alert-dismissible fade show" role="alert">
                                                ${err}
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                                </div>`)
                                        })
                                    }
                                    
                                }
                            }
                        }
                    }            
                });
            
            
            });

            
        }).catch(err=>{
            console.log(err)
        })
    }

    $('#popList').on('change', function(){
        let x = $(this).val()
        
        if(x != ""){
            let fd= new FormData();
            fd.append('uid', x)
            let url = window.location.origin + "/fetch-response/" + x
            fetch(url ,{
                method : 'GET',
                headers : {
                    'Accept':'application/json',
                    'Content-Type':'application/json'
                },
            }).then(res=> res.json()).then(res=>{
                if(res.statusCode == 200){
                    let data = JSON.parse(JSON.stringify(res.message));

                    console.log(data)
                }
            }).catch(err=>{
                console.log(err)
            })
        }
    })

</script>